{"version":3,"file":"index.js","sources":["node_modules/generaltranslation/codes/639-1/CodeToLanguage.js","node_modules/generaltranslation/codes/codes.js","node_modules/generaltranslation/translate/prompts.js","server/_I18NStringResolver.js","server/ServerI18N.js","node_modules/generaltranslation/index.js","node_modules/generaltranslation/translate/html.js","next/NextI18N.js","provider/I18NProvider.js","primitives/ExcludeI18N.js","primitives/I18N.js"],"sourcesContent":["const CodeToLanguage = {\n    \"ab\": \"Abkhazian\",\n    \"aa\": \"Afar\",\n    \"af\": \"Afrikaans\",\n    \"ak\": \"Akan\",\n    \"sq\": \"Albanian\",\n    \"am\": \"Amharic\",\n    \"ar\": \"Arabic\",\n    \"an\": \"Aragonese\",\n    \"hy\": \"Armenian\",\n    \"as\": \"Assamese\",\n    \"av\": \"Avaric\",\n    \"ae\": \"Avestan\",\n    \"ay\": \"Aymara\",\n    \"az\": \"Azerbaijani\",\n    \"bm\": \"Bambara\",\n    \"ba\": \"Bashkir\",\n    \"eu\": \"Basque\",\n    \"be\": \"Belarusian\",\n    \"bn\": \"Bengali\",\n    \"bi\": \"Bislama\",\n    \"bs\": \"Bosnian\",\n    \"br\": \"Breton\",\n    \"bg\": \"Bulgarian\",\n    \"my\": \"Burmese\",\n    \"ca\": \"Catalan\",\n    \"ch\": \"Chamorro\",\n    \"ce\": \"Chechen\",\n    \"ny\": \"Chichewa\",\n    \"zh\": \"Chinese\",\n    \"cu\": \"Slavonic\",\n    \"cv\": \"Chuvash\",\n    \"kw\": \"Cornish\",\n    \"co\": \"Corsican\",\n    \"cr\": \"Cree\",\n    \"hr\": \"Croatian\",\n    \"cs\": \"Czech\",\n    \"da\": \"Danish\",\n    \"dv\": \"Divehi\",\n    \"nl\": \"Dutch\",\n    \"dz\": \"Dzongkha\",\n    \"en\": \"English\",\n    \"eo\": \"Esperanto\",\n    \"et\": \"Estonian\",\n    \"ee\": \"Ewe\",\n    \"fo\": \"Faroese\",\n    \"fj\": \"Fijian\",\n    \"fi\": \"Finnish\",\n    \"fr\": \"French\",\n    \"fy\": \"Frisian\",\n    \"ff\": \"Fulah\",\n    \"gd\": \"Gaelic\",\n    \"gl\": \"Galician\",\n    \"lg\": \"Ganda\",\n    \"ka\": \"Georgian\",\n    \"de\": \"German\",\n    \"el\": \"Greek\",\n    \"kl\": \"Kalaallisut\",\n    \"gn\": \"Guarani\",\n    \"gu\": \"Gujarati\",\n    \"ht\": \"Haitian Creole\",\n    \"ha\": \"Hausa\",\n    \"he\": \"Hebrew\",\n    \"hz\": \"Herero\",\n    \"hi\": \"Hindi\",\n    \"ho\": \"Hiri Motu\",\n    \"hu\": \"Hungarian\",\n    \"is\": \"Icelandic\",\n    \"io\": \"Ido\",\n    \"ig\": \"Igbo\",\n    \"id\": \"Indonesian\",\n    \"ia\": \"Interlingua\",\n    \"ie\": \"Interlingue\",\n    \"iu\": \"Inuktitut\",\n    \"ik\": \"Inupiaq\",\n    \"ga\": \"Irish\",\n    \"it\": \"Italian\",\n    \"ja\": \"Japanese\",\n    \"jv\": \"Javanese\",\n    \"kn\": \"Kannada\",\n    \"kr\": \"Kanuri\",\n    \"ks\": \"Kashmiri\",\n    \"kk\": \"Kazakh\",\n    \"km\": \"Khmer\",\n    \"ki\": \"Kikuyu\",\n    \"rw\": \"Kinyarwanda\",\n    \"ky\": \"Kyrgyz\",\n    \"kv\": \"Komi\",\n    \"kg\": \"Kongo\",\n    \"ko\": \"Korean\",\n    \"kj\": \"Kuanyama\",\n    \"ku\": \"Kurdish\",\n    \"lo\": \"Lao\",\n    \"la\": \"Latin\",\n    \"lv\": \"Latvian\",\n    \"li\": \"Limburgan\",\n    \"ln\": \"Lingala\",\n    \"lt\": \"Lithuanian\",\n    \"lu\": \"Luba-Katanga\",\n    \"lb\": \"Luxembourgish\",\n    \"mk\": \"Macedonian\",\n    \"mg\": \"Malagasy\",\n    \"ms\": \"Malay\",\n    \"ml\": \"Malayalam\",\n    \"mt\": \"Maltese\",\n    \"gv\": \"Manx\",\n    \"mi\": \"Maori\",\n    \"mr\": \"Marathi\",\n    \"mh\": \"Marshallese\",\n    \"mn\": \"Mongolian\",\n    \"na\": \"Nauru\",\n    \"nv\": \"Navajo\",\n    \"nd\": \"Northern Ndebele\",\n    \"nr\": \"Southern Ndebele\",\n    \"ng\": \"Ndonga\",\n    \"ne\": \"Nepali\",\n    \"no\": \"Norwegian\",\n    \"nb\": \"Norwegian Bokmål\",\n    \"nn\": \"Norwegian Nynorsk\",\n    \"ii\": \"Nuosu\",\n    \"oc\": \"Occitan\",\n    \"oj\": \"Ojibwa\",\n    \"or\": \"Oriya\",\n    \"om\": \"Oromo\",\n    \"os\": \"Ossetian\",\n    \"pi\": \"Pali\",\n    \"ps\": \"Pashto\",\n    \"fa\": \"Persian\",\n    \"pl\": \"Polish\",\n    \"pt\": \"Portuguese\",\n    \"pa\": \"Punjabi\",\n    \"qu\": \"Quechua\",\n    \"ro\": \"Romanian\",\n    \"rm\": \"Romansh\",\n    \"rn\": \"Rundi\",\n    \"ru\": \"Russian\",\n    \"se\": \"Northern Sami\",\n    \"sm\": \"Samoan\",\n    \"sg\": \"Sango\",\n    \"sa\": \"Sanskrit\",\n    \"sc\": \"Sardinian\",\n    \"sr\": \"Serbian\",\n    \"sn\": \"Shona\",\n    \"sd\": \"Sindhi\",\n    \"si\": \"Sinhalese\",\n    \"sk\": \"Slovak\",\n    \"sl\": \"Slovenian\",\n    \"so\": \"Somali\",\n    \"st\": \"Sotho\",\n    \"es\": \"Spanish\",\n    \"su\": \"Sundanese\",\n    \"sw\": \"Swahili\",\n    \"ss\": \"Swati\",\n    \"sv\": \"Swedish\",\n    \"tl\": \"Tagalog\",\n    \"ty\": \"Tahitian\",\n    \"tg\": \"Tajik\",\n    \"ta\": \"Tamil\",\n    \"tt\": \"Tatar\",\n    \"te\": \"Telugu\",\n    \"th\": \"Thai\",\n    \"bo\": \"Tibetan\",\n    \"ti\": \"Tigrinya\",\n    \"to\": \"Tonga\",\n    \"ts\": \"Tsonga\",\n    \"tn\": \"Tswana\",\n    \"tr\": \"Turkish\",\n    \"tk\": \"Turkmen\",\n    \"tw\": \"Twi\",\n    \"ug\": \"Uyghur\",\n    \"uk\": \"Ukrainian\",\n    \"ur\": \"Urdu\",\n    \"uz\": \"Uzbek\",\n    \"ve\": \"Venda\",\n    \"vi\": \"Vietnamese\",\n    \"vo\": \"Volapük\",\n    \"wa\": \"Walloon\",\n    \"cy\": \"Welsh\",\n    \"wo\": \"Wolof\",\n    \"xh\": \"Xhosa\",\n    \"yi\": \"Yiddish\",\n    \"yo\": \"Yoruba\",\n    \"za\": \"Zhuang\",\n    \"zu\": \"Zulu\"\n}\nexport default CodeToLanguage;","// ----- IMPORTS ----- //\n\nimport CodeToLanguage from './639-1/CodeToLanguage.js'\nimport LanguageToCode from './639-1/LanguageToCode.js'\n\n// only for languages which have no two-letter code\nimport CodeToLanguageTriletter from './639-3/CodeToLanguageTriletter.js'\nimport LanguageToCodeTriletter from './639-3/LanguageToCodeTriletter.js'\n\n// ----- LANGUAGE CODES ----- //\n\n// Returns the name of a language from an ISO 639 code or an array of codes\nconst _mapCodeToLanguage = code => {\n    code = code?.toLowerCase();\n    if (code?.length === 2) {\n        return CodeToLanguage[code]\n    } \n    if (code?.length === 3) {\n        CodeToLanguageTriletter[code]\n    }\n    else {\n        return CodeToLanguage[code?.slice(0, 2)] || '';\n    }\n}\nexport const _getLanguageName = codes => {\n    return Array.isArray(codes) ? codes.map(_mapCodeToLanguage) : _mapCodeToLanguage(codes);\n}\n\n// Returns an ISO 639 code from a language name or an array of language names\n// Preferentially returns two-letter codes\nconst _mapLanguageToCode = language => {\n    const lowerCaseLanguage = language?.toLowerCase();\n    return LanguageToCode[lowerCaseLanguage] || LanguageToCodeTriletter[lowerCaseLanguage] || '';\n}\nexport const _getLanguageCode = languages => {\n    return Array.isArray(languages) ? languages.map(_mapLanguageToCode) : _mapLanguageToCode(languages);\n}","// ----- TRANSLATION ----- //\n\n// Decides whether an item object should be translated\nconst _shouldTranslate = item => typeof item?.translate === 'boolean' ? item.translate : true;\n\n// Pre-processes content to send to the API\n// Separates out text that shouldn't be translated.\nconst _processPrompt = ({ content }) => {\n    const processed = [];\n    const untranslated = [];\n    if (Array.isArray(content)) {\n        for (const item of content) {\n            if (typeof item === 'string') {\n                processed.push({\n                    text: item\n                });\n            } else if (_shouldTranslate(item)) {\n                processed.push(item);\n            } else {\n                processed.push({text: '', translate: false});\n                untranslated.push(item);\n            }\n        }\n    } else {\n        if (typeof content === 'string') {\n            processed.push({\n                text: content\n            });\n        } else if (_shouldTranslate(content)) {\n            processed.push(content);\n        } else {\n            processed.push({text: '', translate: false});\n            untranslated.push(content);\n        }\n    } \n    return {\n        processed: processed,\n        untranslated: untranslated.length > 0 ? untranslated : null\n    }\n}\n\n// Build content string from array or single item\nconst _constructPrompt = ({ content, untranslated = null}) => {\n    if (Array.isArray(content)) {\n        let final = '';\n        for (const item of content) {\n            if (typeof item === 'string') final += item;\n            else if (_shouldTranslate(item)) final += item?.text || '';\n            else {\n                if (untranslated?.length > 0) {\n                    final += untranslated?.shift().text || '';\n                } else {\n                    final += item?.text || '';\n                }\n            }\n        }\n        return final;\n    } else if (typeof content === 'string') {\n        return content;\n    } else {\n        return content?.text || '';\n    }\n}\n\n// Get a translation via General Translation API\n// Returns string\nconst _translatePrompt = async ({\n    content, language, config\n}) => {\n    \n    const apiKey = config?.apiKey;\n    if (!apiKey) {\n        throw new Error('Missing API Key!')\n    };\n\n    const defaultLanguage = config?.defaultLanguage;\n    if (language === defaultLanguage) {\n        return _constructPrompt({ content: content });\n    };\n\n    const { processed, untranslated } = _processPrompt({ content });\n    \n    try {\n        const response = await fetch(`${config?.baseURL}/prompts`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'gtx-api-key': apiKey,\n            },\n            body: JSON.stringify({\n                content: processed,\n                targetLanguage: language,\n                defaultLanguage: defaultLanguage\n            })\n        })\n        if (!response.ok) {\n            const result = await response.text();\n            throw new Error(`${result || response.status}`);\n        } else {\n            const result = await response.json();\n            return _constructPrompt({content: result, untranslated: untranslated });\n        }\n    } catch (error) {\n        console.error(error)\n        return _constructPrompt({ content: content })\n    }\n\n}\n\nexport default _translatePrompt;","'use client'\n\nimport { useState, useEffect } from 'react';\n\n// children should just be a string\nexport default function _I18NStringResolver({\n    children, html, I18NPromise\n}) {\n\n    const [translation, setTranslation] = useState(null)\n\n    useEffect(() => {\n        const resolveI18NPromise = async () => {\n            const I18NData = await I18NPromise;\n            setTranslation(I18NData?.[html]?.[children])\n        }\n        resolveI18NPromise();\n    }, [I18NPromise])\n\n    return (\n        <>\n            {\n                (translation ? true : false)\n                ?\n                translation\n                :\n                children\n            }\n        </>\n    )\n}","'use server'\n\nimport React from 'react';\n\nimport GT, { getLanguageName } from 'generaltranslation';\nimport _I18NStringResolver from './_I18NStringResolver';\nconst defaultDriver = new GT()\n\nfunction deepMerge(obj1, obj2) {\n    for (let key in obj2) {\n        if (obj2[key] instanceof Object && key in obj1) {\n            obj1[key] = deepMerge(obj1[key], obj2[key]);\n        } else {\n            obj1[key] = obj2[key];\n        }\n    }\n    return obj1;\n}\n\nexport default async function ServerI18N({\n    children,\n    projectID = '',\n    defaultLanguage = 'en',\n    forceUserLanguage = '',\n    i18nTags = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ol', 'ul'],\n    excludeTags = [\"ExcludeI18N\"],\n    remoteSource = true,\n    gt = defaultDriver,\n    ...languageJSONs\n}) {\n\n    const userLanguage = forceUserLanguage || defaultLanguage;\n    const translationRequired = projectID && (getLanguageName(userLanguage) !== getLanguageName(defaultLanguage)) ? true : false;\n    \n    if (!translationRequired) {\n        return (\n            <>\n                {children}\n            </>\n        )\n    }\n\n    let I18NData;\n\n    if (remoteSource) {\n        try {\n            const response = await fetch(`https://json.gtx.dev/${projectID}/${userLanguage}`);\n            I18NData = await response.json();\n        } catch (error) {\n            console.error(error)\n            return (\n                <>\n                    {children}\n                </>\n            )\n        }\n    }\n\n    if (userLanguage in languageJSONs) {\n        I18NData ? languageJSONs[userLanguage] : { ...I18NData, ...languageJSONs[userLanguage] };\n    }\n\n    // CREATE HTML STRING FOR IDENTIFICATION\n\n    const createChildrenString = (children) => {\n        return React.Children.map(children, child => {\n          if (React.isValidElement(child)) {\n            const { type, props } = child;\n            let currentChildren = '';\n            if (excludeI18N(type)) {\n                return `{variable}`\n            } else {\n                Object.entries(props)\n                .map(([key, value]) => {\n                    if (key === 'children') {\n                        currentChildren += createChildrenString(value);\n                        return ''\n                    }\n                })\n                .join('');\n                return `<${type?.displayName || type?.name || type}>${currentChildren}</${type?.displayName || type?.name || type}>`;\n            }\n          }\n          return child?.toString() || '';\n        }).join('');\n    }\n\n    // CHECKS\n\n    const excludeI18N = (type) => {\n        if (excludeTags.includes(type)) return true;\n        if (excludeTags.includes(type?.name)) return true;\n        else return false;\n    };\n    const includeI18N = (type) => {\n        if (i18nTags.includes(type)) return true;\n        if (i18nTags.includes(type?.name)) return true;\n        else return false;\n    };\n    const markedForI18N = (type) => type?.name === 'I18N';\n\n    // TRAVERSE FOR NEW TRANSLATIONS\n\n    const newStrings = {}\n\n    // Go through and collate strings\n    const traverseStrings = (child, html) => {\n        const I18NStrings = I18NData[html];\n        if (typeof child === 'string' && !I18NStrings?.[child]) {\n            newStrings[html] = newStrings[html] || [];\n            const strings = newStrings[html];\n            strings.push(child);\n        } \n        else if (React.isValidElement(child)) {\n            const { type, props } = child;\n            if (!excludeI18N(type)) {\n                React.Children.forEach(props.children, currentChild => {\n                    return traverseStrings(currentChild, html);\n                });\n            }\n        }\n    }\n\n    // Go through I18Ns for matching children\n    const traverseI18N = (child) => {\n        if (React.isValidElement(child)) {   \n            const { type, props } = child;\n            if (excludeI18N(type)) {\n                return;\n            } \n            else if (includeI18N(type)) {\n                const html = createChildrenString(child);\n                traverseStrings(child, html);\n            } \n            else {\n                React.Children.forEach(props.children, currentChild => {\n                    return traverseI18N(currentChild)\n                });\n            }\n        }\n    }\n\n    // Go through and find I18Ns, ignoring ExcludeI18Ns\n    const traverseChildren = (child) => {\n        if (React.isValidElement(child)) {   \n            const { type, props } = child;\n            if (excludeI18N(type)) {\n                return;\n            } \n            else if (markedForI18N(type)) {\n                React.Children.forEach(props.children, currentChild => {\n                    return traverseI18N(currentChild)\n                    /*if (typeof currentChild === 'string') {\n                        newStrings[currentChild] = [currentChild];\n                    } else {\n                        return traverseI18N(currentChild)\n                    }*/\n                });\n            } \n            else {\n                React.Children.forEach(props.children, currentChild => {\n                    return traverseChildren(currentChild)\n                });\n            }\n        }\n    }\n\n    traverseChildren(children);\n    \n    // TRANSLATE MISSING STRINGS\n\n    let translations = I18NData;\n\n    let newTranslations;\n\n    if (Object.keys(newStrings).length > 0) {\n        newTranslations = gt.translateHTML({\n            projectID,\n            userLanguage,\n            defaultLanguage,\n            content: newStrings\n        })\n        /*if (typeof newTranslations === 'object') {\n           translations = deepMerge(newTranslations, I18NData);\n        }*/\n    };\n\n    // RENDER\n\n    // Go through and replace strings\n    const renderStrings = (child, html) => {\n        if (typeof child === 'string') {\n            if (translations?.[html]?.[child]) {\n                return translations[html][child]\n            } \n            else if (newStrings?.[html]?.includes(child)) {\n                return <_I18NStringResolver html={html} I18NPromise={newTranslations}>{child}</_I18NStringResolver>\n            }\n            else {\n                return child;\n            }\n        }\n        else if (React.isValidElement(child)) {\n            const { type, props } = child;\n            if (excludeI18N(type)) {\n                return child;\n            } else {\n                if (props.children) {\n                    return React.cloneElement(child, {\n                        ...props,\n                        children: React.Children.toArray(props.children).map(currentChild => renderStrings(currentChild, html))\n                    });\n                }\n                else {\n                    return child;\n                }\n            }\n        } \n        else {\n            return child;\n        }\n    }\n\n    // Go through and replace in appropriate tags\n    const renderI18N = (child) => {\n        if (React.isValidElement(child)) {   \n            const { type, props } = child;\n            if (excludeI18N(type)) {\n                return child;\n            } \n            else if (includeI18N(type)) {\n                const html = createChildrenString(child);\n                return renderStrings(child, html)\n            } \n            else {\n                if (props.children) {\n                    return React.cloneElement(child, {\n                        ...props,\n                        children: React.Children.toArray(props.children).map(currentChild => renderI18N(currentChild))\n                    });\n                }\n                else {\n                    return child;\n                }\n            }\n        } \n        else {\n            return child;\n        }\n    }\n\n    // Go through and find I18Ns, ignoring ExcludeI18Ns\n    const renderChildren = (child) => {\n        if (React.isValidElement(child)) {\n            const { type, props } = child;\n            if (excludeI18N(type)) {\n                return child;\n            }\n            else if (markedForI18N(type)) {\n                return renderI18N(child);\n            }\n            else {\n                if (props.children) {\n                    return React.cloneElement(child, {\n                        ...props,\n                        children: React.Children.toArray(props.children).map(currentChild => renderChildren(currentChild))\n                    });\n                }\n                else {\n                    return child;\n                }\n            }\n        } else {\n            return child;\n        }\n    }\n\n    const I18NChildren = renderChildren(children);\n\n    return (\n        <>\n            {I18NChildren}\n        </>\n    )\n    \n}","// `generaltranslation` language toolkit\n// © 2024, General Translation, Inc.\n\n// ----- IMPORTS ----- //\n\nimport { _getLanguageCode, _getLanguageName } from \"./codes/codes.js\"\nimport _translatePrompt from \"./translate/prompts.js\"\nimport _translateHTML from \"./translate/html.js\";\n\n// ----- CORE CLASS ----- // \n\nexport default class GT {\n\n    constructor({\n        apiKey = '', \n        defaultLanguage = 'en',\n        baseURL = 'https://translate.gtx.dev'\n    } = {}) {\n        this.apiKey = apiKey || (typeof process !== 'undefined' ? process.env.GT_API_KEY : '');\n        this.defaultLanguage = defaultLanguage?.toLowerCase();\n        this.baseURL = baseURL;\n    }\n\n    // Prompt I18N\n    async translatePrompt(prompt, language) {\n        return await _translatePrompt({\n            content: prompt, language: language, config: this\n        });\n    }\n\n    // Site I18N\n    async translateHTML({ projectID, defaultLanguage, userLanguage, content }) {\n        return await _translateHTML({\n           projectID: projectID,\n           defaultLanguage: defaultLanguage,\n           userLanguage: userLanguage,\n           content: content,\n           config: this\n        });\n    }\n\n}\n\n// ----- SECONDARY EXPORTS ----- //\n\nexport {\n    _getLanguageCode as getLanguageCode,\n    _getLanguageName as getLanguageName\n};","const _translateHTML = async ({\n    projectID,\n    defaultLanguage,\n    userLanguage,\n    content,\n    config\n}) => {\n\n    const apiKey = config?.apiKey;\n    if (!apiKey) {\n        throw new Error('Missing API Key!')\n    };\n\n    if (!projectID) {\n        throw new Error('Missing project ID!')\n    };\n\n    try {\n        const response = await fetch(`https://html.gtx.dev`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'gtx-api-key': apiKey,\n            },\n            body: JSON.stringify({\n                projectID: projectID,\n                defaultLanguage: defaultLanguage,\n                userLanguage: userLanguage,\n                content: content\n            })\n        });\n        if (!response.ok) {\n            const result = await response.text();\n            throw new Error(`${result || response.status}`);\n        } else {\n            const result = await response.json();\n            return result;\n        }\n    } catch (error) {\n        console.error(error);\n        return {};\n    }\n    \n}\nexport default _translateHTML;","'use server'\n\nimport { headers } from 'next/headers'\nimport ServerI18N from '../server/ServerI18N';\n\nexport default async function NextI18N({\n    children,\n    projectID = '',\n    defaultLanguage = 'en',\n    forceUserLanguage = '',\n    i18nTags = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ol', 'ul'],\n    excludeTags = [\"ExcludeI18N\"],\n    remoteSource = true,\n    ...languageJSONs\n}) {\n    \n    const languages = headers()?.get('accept-language');\n    const userLanguage = forceUserLanguage || languages?.split(',')?.[0]?.slice(0, 2) || defaultLanguage;\n\n    return (\n        <ServerI18N \n            forceUserLanguage={userLanguage}\n            projectID={projectID}\n            defaultLanguage={defaultLanguage}\n            i18nTags={i18nTags}\n            excludeTags={excludeTags}\n            remoteSource={remoteSource}\n            {...languageJSONs}\n        >\n            {children}\n        </ServerI18N>\n    )\n    \n}","'use client'\n\nimport React, { useCallback } from 'react';\nimport { getLanguageName } from 'generaltranslation';\nimport { createContext, useEffect, useState, useContext } from 'react'\n\nconst I18NContext = createContext();\nexport const useI18NContext = () => useContext(I18NContext);\n\nexport default function I18NProvider({\n    children,\n    projectID = '',\n    defaultLanguage = 'en',\n    forceUserLanguage = '',\n    i18nTags = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ol', 'ul'],\n    excludeTags = [\"ExcludeI18N\"],\n    remoteSource = true,\n    ...languageJSONs\n}) {\n\n    // PARAMETERS\n\n    const [userLanguage, setUserLanguage] = useState(forceUserLanguage);\n    const [translationRequired, setTranslationRequired] = useState(projectID ? true : false);\n    useEffect(() => {\n        const getUserLanguage = () => {\n            let newUserLanguage = '';\n            if (typeof window !== 'undefined') {\n                newUserLanguage = window.navigator.language.split(\"-\")[0];\n            } else if (typeof navigator !== 'undefined') {\n                newUserLanguage = navigator.language.split(\"-\")[0];\n            } else {\n                newUserLanguage = defaultLanguage;\n            }\n            setUserLanguage(newUserLanguage);\n            setTranslationRequired(projectID && (getLanguageName(newUserLanguage) !== getLanguageName(defaultLanguage)));\n        }\n        if (!userLanguage) {\n            getUserLanguage()\n        } else {\n            setTranslationRequired(projectID && (getLanguageName(newUserLanguage) !== getLanguageName(defaultLanguage)));\n        }\n    }, [projectID, defaultLanguage]);\n\n    // FETCH EXISTING TRANSLATION SHEET\n\n    // Gets internationalized content\n    // Tries first for local data, then for remote\n    const [I18NData, setI18NData] = useState(null);\n    useEffect(() => {\n        const fetchI18NData = async () => {\n            let data = {};\n            if (remoteSource) {\n                try {\n                    const response = await fetch(`https://json.gtx.dev/${projectID}/${userLanguage}`);\n                    data = await response.json();\n                } catch (error) {\n                    console.log('@generaltranslation/react: No current internationalization found. One will be created dynamically based on your project settings.');\n                }\n            }\n            if (userLanguage in languageJSONs) {\n                data = { ...data, ...languageJSONs[userLanguage] };\n            }\n            if (typeof data === 'object') { \n                setI18NData(data);\n            } else {\n                setI18NData({})\n            }\n        }\n        if (translationRequired && userLanguage) {\n            fetchI18NData()\n        }\n    }, [projectID, translationRequired, userLanguage]);\n\n    // CHECKS\n\n    const excludeI18N = useCallback((type) => {\n        if (excludeTags.includes(type)) return true;\n        if (excludeTags.includes(type?.name)) return true;\n        else return false;\n    }, []);\n    const includeI18N = useCallback((type) => {\n        if (i18nTags.includes(type)) return true;\n        if (i18nTags.includes(type?.name)) return true;\n        else return false;\n    }, []);\n    const markedForI18N = useCallback((type) => type?.name === 'I18N', []);\n\n    // CREATE HTML STRING FOR IDENTIFICATION\n\n    const createChildrenString = useCallback((children) => {\n        return React.Children.map(children, child => {\n          if (React.isValidElement(child)) {\n            const { type, props } = child;\n            let currentChildren = '';\n            if (excludeI18N(type)) {\n                return `{variable}`\n            } else {\n                Object.entries(props)\n                .map(([key, value]) => {\n                    if (key === 'children') {\n                        currentChildren += createChildrenString(value);\n                        return ''\n                    }\n                })\n                .join('');\n                return `<${type.displayName || type?.name || type}>${currentChildren}</${type?.displayName || type?.name || type}>`;\n            }\n          }\n          return child?.toString() || '';\n        }).join('');\n    }, [excludeI18N]);\n\n    const [I18NChildren, setI18NChildren] = useState()\n\n    // RENDER\n\n    // Go through and replace strings\n    const renderStrings = useCallback((child, I18NStrings) => {\n        if (typeof child === 'string') {\n            return I18NStrings?.[child] || child;\n        }\n        else if (React.isValidElement(child)) {\n            const { type, props } = child;\n            if (excludeI18N(type)) {\n                return child;\n            } else {\n                return React.cloneElement(child, {\n                    ...props,\n                    children: React.Children.toArray(props.children).map(currentChild => renderStrings(currentChild, I18NStrings))\n                });\n            }\n        } \n        else {\n            return child;\n        }\n    }, [excludeI18N])\n\n    // Go through and replace in appropriate tags\n    const renderI18N = useCallback((child) => {\n        if (React.isValidElement(child)) {   \n            const { type, props } = child;\n            if (excludeI18N(type)) {\n                return child;\n            } \n            else if (includeI18N(type)) {\n                const html = createChildrenString(child);\n                return renderStrings(child, I18NData[html])\n            } \n            else {\n                return React.cloneElement(child, {\n                    ...props,\n                    children: React.Children.toArray(props.children).map(currentChild => renderI18N(currentChild))\n                });\n            }\n        } \n        else {\n            return child;\n        }\n    }, [excludeI18N, includeI18N, createChildrenString, renderStrings, I18NData]);\n\n    // Go through and find I18Ns, ignoring ExcludeI18Ns\n    const renderChildren = useCallback((child) => {\n        if (React.isValidElement(child)) {\n            const { type, props } = child;\n            if (excludeI18N(type)) {\n                return child;\n            }\n            else if (markedForI18N(type)) {\n                return renderI18N(child);\n            }\n            else {\n                return React.cloneElement(child, {\n                    ...props,\n                    children: React.Children.toArray(props.children).map(currentChild => renderChildren(currentChild))\n                });\n            }\n        } else {\n            return child;\n        }\n    }, [excludeI18N, markedForI18N, renderI18N]);\n    \n    useEffect(() => {\n        setI18NChildren(renderChildren(children));\n    }, [children, I18NData])\n\n    // IMPORTANT!\n    // Children should not load without I18NData\n    // I18NData should not exist without userLanguage\n    \n    return (\n        <I18NContext.Provider\n            value = {{\n                projectID,\n                defaultLanguage,\n                userLanguage,\n                translationRequired,\n                I18NData\n            }}\n        >\n            {\n                translationRequired\n                ?\n                I18NChildren ? I18NChildren : <></>\n                :\n                children\n            }\n        </I18NContext.Provider>\n    )\n}","export default function ExcludeI18N({ children }) {\n    return (\n        <>\n            {children}\n        </>\n    );\n}\n","export default function I18N({ children }) {\n    return (\n        <>\n            {children}\n        </>\n    );\n}\n"],"names":["CodeToLanguage","ab","aa","af","ak","sq","am","ar","an","hy","as","av","ae","ay","az","bm","ba","eu","be","bn","bi","bs","br","bg","my","ca","ch","ce","ny","zh","cu","cv","kw","co","cr","hr","cs","da","dv","nl","dz","en","eo","et","ee","fo","fj","fi","fr","fy","ff","gd","gl","lg","ka","de","el","kl","gn","gu","ht","ha","he","hz","hi","ho","hu","is","io","ig","id","ia","ie","iu","ik","ga","it","ja","jv","kn","kr","ks","kk","km","ki","rw","ky","kv","kg","ko","kj","ku","lo","la","lv","li","ln","lt","lu","lb","mk","mg","ms","ml","mt","gv","mi","mr","mh","mn","na","nv","nd","nr","ng","ne","no","nb","nn","ii","oc","oj","or","om","os","pi","ps","fa","pl","pt","pa","qu","ro","rm","rn","ru","se","sm","sg","sa","sc","sr","sn","sd","si","sk","sl","so","st","es","su","sw","ss","sv","tl","ty","tg","ta","tt","te","th","bo","ti","to","ts","tn","tr","tk","tw","ug","uk","ur","uz","ve","vi","vo","wa","cy","wo","xh","yi","yo","za","zu","_mapCodeToLanguage","code","toLowerCase","length","slice","_getLanguageName","codes","Array","isArray","map","_shouldTranslate","item","translate","_constructPrompt","content","untranslated","final","text","shift","_translatePrompt","async","language","config","apiKey","Error","defaultLanguage","processed","push","_processPrompt","response","fetch","baseURL","method","headers","body","JSON","stringify","targetLanguage","ok","result","json","status","error","console","_I18NStringResolver","_ref","children","html","I18NPromise","_useState2","_slicedToArray","useState","translation","setTranslation","useEffect","resolveI18NPromise","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_I18NData$html","I18NData","wrap","_context","prev","next","sent","stop","apply","this","arguments","React","createElement","Fragment","_excluded","defaultDriver","constructor","process","env","GT_API_KEY","translatePrompt","prompt","translateHTML","projectID","userLanguage","_translateHTML","ServerI18N","_x","_ServerI18N","_ref$projectID","_ref$defaultLanguage","_ref$forceUserLanguag","forceUserLanguage","_ref$i18nTags","i18nTags","_ref$excludeTags","excludeTags","_ref$remoteSource","remoteSource","_ref$gt","gt","languageJSONs","createChildrenString","excludeI18N","includeI18N","markedForI18N","newStrings","traverseStrings","traverseI18N","translations","newTranslations","renderStrings","renderI18N","I18NChildren","_objectWithoutProperties","getLanguageName","abrupt","concat","t0","_objectSpread","Children","child","isValidElement","type","props","currentChildren","Object","entries","_ref3","key","value","join","displayName","name","toString","includes","I18NStrings","forEach","currentChild","traverseChildren","keys","_translations$html","_newStrings$html","cloneElement","toArray","renderChildren","_NextI18N","_headers","_languages$split","languages","get","split","_extends","I18NContext","createContext","setUserLanguage","_useState4","translationRequired","setTranslationRequired","newUserLanguage","window","navigator","getUserLanguage","_useState6","setI18NData","fetchI18NData","data","log","_typeof","useCallback","_ref4","_useState8","setI18NChildren","Provider","NextI18N"],"mappings":"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"}